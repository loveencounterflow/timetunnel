{
  "version": 3,
  "file": "demo.js",
  "sourceRoot": "../..",
  "sources": [
    "src/experiments/demo.coffee"
  ],
  "names": [],
  "mappings": ";AAAA;EAAA;;AAAA,MAAA,UAAA,EAAA,GAAA,EAAA,MAAA,EAAA,aAAA,EAAA,GAAA,EAAA,GAAA,EAAA;;EAGA,GAAA,GAAkB,OAAO,CAAC;;EAC1B,GAAA,GAAkB,CAAE,OAAA,CAAQ,MAAR,CAAF,CAAkB,CAAC;;EACrC,UAAA,GAAkB,OAAA,CAAQ,OAAR,EALlB;;;;;;;EAWA,MAAA,GAAS,QAAA,CAAE,IAAF,CAAA;AACP,WAAO,IAAI,CAAC,OAAL,CAAa,SAAb,EAAwB,QAAA,CAAE,EAAF,CAAA;AAC7B,aAAO,EAAA,GAAK,CAAE,QAAA,CAAS,EAAT,EAAa,EAAb,CAAF,CAAA,GAAsB;IADL,CAAxB;EADA,EAXT;;;EAgBA,aAAA,GAAgB,6DAhBhB;;;;;;EAuBA,SAAA,GAAY,QAAA,CAAE,GAAF,EAAO,aAAP,CAAA;AACV,QAAA,aAAA,EAAA,aAAA,EAAA;IAAA,aAAA,GAAkB,GAAG,CAAC,IAAJ,CAAY,aAAZ;IAClB,aAAA,GAAkB,MAAA,CAAY,aAAZ;IAClB,cAAA,GAAkB,GAAG,CAAC,MAAJ,CAAY,aAAZ;IAClB,GAAA,CAAI,KAAJ,EAAW,GAAA,CAAI,aAAJ,CAAX;IACA,GAAA,CAAI,KAAJ,EAAW,GAAA,CAAI,aAAJ,CAAX;IACA,GAAA,CAAI,KAAJ,EAAW,GAAA,CAAI,aAAJ,CAAX;IACA,GAAA,CAAI,KAAJ,EAAW,GAAA,CAAI,cAAJ,CAAX;AACA,WAAO;EARG;;EAUZ,GAAA,GAAM,IAAI,UAAU,CAAC,UAAf,CAA0B,OAA1B;;EACN,GAAG,CAAC,UAAJ,CAAe,gBAAf;;EACA,SAAA,CAAU,GAAV,EAAe,aAAf;;EAEA,GAAA,CAAI,KAAJ;;EAEA,GAAA,GAAM,IAAI,UAAU,CAAC,UAAf,CAA0B,OAA1B;;EACN,GAAG,CAAC,UAAJ,CAAe,gBAAf;;EACA,SAAA,CAAU,GAAV,EAAe,aAAf;;EAEA,GAAA,CAAI,KAAJ;;EAEA,GAAA,GAAM,IAAI,UAAU,CAAC,UAAf,CAAA;;EACN,GAAG,CAAC,UAAJ,CAAe,gBAAf;;EACA,SAAA,CAAU,GAAV,EAAe,aAAf;AA/CA",
  "sourcesContent": [
    "#--------------------------------------------------------\n# Create a TimeTunnel instance:\n\nlog             = console.log\nrpr             = ( require 'util' ).inspect\nTIMETUNNEL      = require '../..'\n# TIMETUNNEL      = require 'timetunnel'\n# tnl.add_tunnel TIMETUNNEL.tunnels.remove_backslash\n# tnl.add_tunnel TIMETUNNEL.tunnels.htmlish\n\n#--------------------------------------------------------\nmodify = ( text ) ->\n  return text.replace /[0-9]+/g, ( $0 ) ->\n    return '' + ( parseInt $0, 10 ) * 12\n\n#--------------------------------------------------------\noriginal_text = \"abcde A plain number 123, two bracketed ones: {123}, {124}\"\n\n#--------------------------------------------------------\n# Hide 'offending' original_text,\n# process it,\n# finally recover tunneled parts:\n\ntransform = ( tnl, original_text ) ->\n  tunneled_text   = tnl.hide    original_text\n  modified_text   = modify      tunneled_text\n  uncovered_text  = tnl.reveal  modified_text\n  log '(1)', rpr original_text\n  log '(2)', rpr tunneled_text\n  log '(3)', rpr modified_text\n  log '(4)', rpr uncovered_text\n  return uncovered_text\n\ntnl = new TIMETUNNEL.Timetunnel 'abcde'\ntnl.add_tunnel ///   \\{ ( [0-9]+ ) \\}   ///gu\ntransform tnl, original_text\n\nlog '...'\n\ntnl = new TIMETUNNEL.Timetunnel 'abcde'\ntnl.add_tunnel /// ( \\{   [0-9]+   \\} ) ///gu\ntransform tnl, original_text\n\nlog '...'\n\ntnl = new TIMETUNNEL.Timetunnel()\ntnl.add_tunnel /// ( \\{   [0-9]+   \\} ) ///gu\ntransform tnl, original_text\n\n\n"
  ]
}