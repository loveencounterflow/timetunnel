{
  "version": 3,
  "file": "types.js",
  "sourceRoot": "..",
  "sources": [
    "src/types.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'TUNNELTEXT/TYPES'\ndebug                     = CND.get_logger 'debug',     badge\nalert                     = CND.get_logger 'alert',     badge\nwhisper                   = CND.get_logger 'whisper',   badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\ninfo                      = CND.get_logger 'info',      badge\njr                        = JSON.stringify\nIntertype                 = ( require 'intertype' ).Intertype\nintertype                 = new Intertype module.exports\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'tunneltext_chrs',\n  tests:\n    \"x is a text\":                  ( x ) -> @isa.text x\n    \"x has 5 distinct codepoints\":  ( x ) -> ( new Set Array.from x ).size is 5\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'tunneltext_tunnel_factory',\n  tests:\n    \"x is a function\":              ( x ) -> @isa.function x\n    \"arity of x is 1\":              ( x ) -> x.length is 1\n\n#-----------------------------------------------------------------------------------------------------------\n@declare 'tunneltext_tunnel',\n  tests:\n    \"x is an object\":               ( x ) -> @isa.object x\n    \"x.name is a nonempty text\":    ( x ) -> @isa.nonempty_text x.name\n    \"x.hide is a function\":         ( x ) -> @isa.function x.hide\n    \"x.reveal is a function\":       ( x ) -> @isa.function x.reveal\n    \"x.remove may be a function\":   ( x ) -> ( not x.remove? ) or ( @isa.function x.remove )\n    \"arity of x.hide is 1\":         ( x ) -> x.hide.length is 1\n    \"arity of x.reveal is 1\":       ( x ) -> x.reveal.length is 1\n    \"arity of x.remove is 1\":       ( x ) -> ( not x.remove? ) or ( x.remove.length is 1 )\n\n"
  ]
}