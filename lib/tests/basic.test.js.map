{
  "version": 3,
  "file": "basic.test.js",
  "sourceRoot": "../..",
  "sources": [
    "src/tests/basic.test.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n'use strict'\n\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'TIMETUNNEL/TESTS/BASIC'\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\ninfo                      = CND.get_logger 'info',      badge\nurge                      = CND.get_logger 'urge',      badge\nhelp                      = CND.get_logger 'help',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\necho                      = CND.echo.bind CND\n#...........................................................................................................\ntest                      = require 'guy-test'\njr                        = JSON.stringify\nIC                        = require '../..'\n{ inspect, }              = require 'util'\nxrpr                      = ( x ) -> inspect x, { colors: yes, breakLength: Infinity, maxArrayLength: Infinity, depth: Infinity, }\nxrpr2                     = ( x ) -> inspect x, { colors: yes, breakLength: 20, maxArrayLength: Infinity, depth: Infinity, }\n#...........................................................................................................\nTIMETUNNEL                = require '../..'\n# require '../exception-handler'\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"basic escaping\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [['abcde','abcdefghxyz'],'cccdcedefghxyz',null,]\n    [['abc',null],null,'not a valid tunneltext_chrs',]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      [ chrs, text, ] = probe\n      tnl = new TIMETUNNEL.Timetunnel chrs\n      result = tnl.hide text\n      resolve result\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"tunnels: hiding\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [['abcde',['remove_backslash',], 'abcdefghxyz'],'cccdcedefghxyz',null,]\n    [['abcde',['remove_backslash',], 'abc\\\\defghxyz'],'cccdcea0befghxyz',null,]\n    [['abcde',['keep_backslash',], 'abc\\\\defghxyz'],'cccdcea0befghxyz',null,]\n    [['abcde',['keep_backslash',], 'abc\\\\defgh\\\\xyz'],'cccdcea0befgha1byz',null,]\n    [[null,['keep_backslash',], 'abc\\\\defgh\\\\xyz'],'abc\\u00100\\u0011efgh\\u00101\\u0011yz',null,]\n    [['abcde',['remove_backslash','htmlish',], 'abc\\\\def <tag/> ghxyz'],'cccdcea0bef a1b ghxyz',null,]\n    # [['abc',null],null,'not a valid tunneltext_chrs',]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      [ chrs, tunnel_names, text, ] = probe\n      tnl = new TIMETUNNEL.Timetunnel chrs\n      #.....................................................................................................\n      for tunnel_name in tunnel_names\n        tunnel_factory = TIMETUNNEL.tunnels[ tunnel_name ]\n        tnl.add_tunnel tunnel_factory\n      #.....................................................................................................\n      result = tnl.hide text\n      resolve result\n  done()\n\n#-----------------------------------------------------------------------------------------------------------\n@[ \"tunnels: hiding and revealing\" ] = ( T, done ) ->\n  probes_and_matchers = [\n    [['abcde',['remove_backslash',], 'abcdefghxyz'],'abcdefghxyz',null,]\n    [['abcde',['remove_backslash',], 'abcdefghxyz'],'abcdefghxyz',null,]\n    [['abcde',['keep_backslash',], 'abc\\\\defghxyz'],'abc\\\\defghxyz',null,]\n    [[null,['keep_backslash',], 'abc\\\\defgh\\\\xyz'],'abc\\\\defgh\\\\xyz',null,]\n    [['abcde',['remove_backslash','htmlish',], 'abc\\\\def <tag/> ghxyz'],'abcdef <tag/> ghxyz',null,]\n    # [['abc',null],null,'not a valid tunneltext_chrs',]\n    ]\n  #.........................................................................................................\n  for [ probe, matcher, error, ] in probes_and_matchers\n    await T.perform probe, matcher, error, -> return new Promise ( resolve, reject ) ->\n      [ chrs, tunnel_names, text, ] = probe\n      tnl = new TIMETUNNEL.Timetunnel chrs\n      #.....................................................................................................\n      for tunnel_name in tunnel_names\n        tunnel_factory = TIMETUNNEL.tunnels[ tunnel_name ]\n        tnl.add_tunnel tunnel_factory\n      #.....................................................................................................\n      result = tnl.reveal tnl.hide text\n      resolve result\n  done()\n\n\n\n############################################################################################################\nunless module.parent?\n  test @\n  # test @[ \"tunnels: hiding\" ]\n  # test @[ \"tunnels: hiding and revealing\" ]\n\n\n"
  ]
}