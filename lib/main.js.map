{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "..",
  "sources": [
    "src/main.coffee"
  ],
  "names": [],
  "mappings": "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",
  "sourcesContent": [
    "\n\n\n\"use strict\"\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'TUNNELTEXT/MAIN'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\nrainbow                   = CND.rainbow.bind CND\n{ jr, }                   = CND\nMultimix                  = require 'multimix'\n#...........................................................................................................\ntypes                     = require './types'\n{ isa\n  validate\n  declare\n  size_of\n  type_of }               = types\n\n\n\n#-----------------------------------------------------------------------------------------------------------\n### from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions ###\nesc_re = ( text ) -> text.replace /[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"\n\n\n#===========================================================================================================\nclass @Tunneltext extends Multimix\n  # @extend   object_with_class_properties\n  # @include require './cataloguing'\n  # @include require './sizing'\n  # @include require './declaring'\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( chrs = null ) ->\n    super()\n    chrs ?= '\\x10\\x11\\x12\\x13\\x14'\n    validate.tunneltext_chrs chrs\n    chrs  = Array.from chrs\n    #.......................................................................................................\n    chr_count = chrs.length\n    delta               = ( chr_count + 1 ) / 2 - 1\n    master              = chrs[ chr_count - delta - 1 ]\n    meta_chr_patterns   = ( /// #{esc_re chrs[ idx ]} ///g            for idx in [ 0 .. delta ] )\n    target_seq_chrs     = ( \"#{master}#{chrs[ idx + delta ]}\"         for idx in [ 0 .. delta ] )\n    target_seq_patterns = ( /// #{esc_re target_seq_chrs[ idx ]} ///g for idx in [ 0 .. delta ] )\n    cloaked             = chrs[ 0 ... delta ]\n\n    debug 'µhd', 'delta:                ', rpr               delta\n    debug 'µhd', 'master:               ', rpr              master\n    debug 'µhd', 'meta_chr_patterns:    ', rpr   meta_chr_patterns\n    debug 'µhd', 'target_seq_chrs:      ', rpr     target_seq_chrs\n    debug 'µhd', 'target_seq_patterns:  ', rpr target_seq_patterns\n    debug 'µhd', 'cloaked:              ', rpr             cloaked\n\n\nnew @Tunneltext 'abcxy'\n\n\n\n"
  ]
}