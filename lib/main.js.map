{
  "version": 3,
  "file": "main.js",
  "sourceRoot": "..",
  "sources": [
    "src/main.coffee"
  ],
  "names": [],
  "mappings": ";AAGA;EAAA;AAAA,MAAA,GAAA,EAAA,QAAA,EAAA,KAAA,EAAA,KAAA,EAAA,KAAA,EAAA,OAAA,EAAA,IAAA,EAAA,MAAA,EAAA,IAAA,EAAA,IAAA,EAAA,GAAA,EAAA,EAAA,EAAA,GAAA,EAAA,OAAA,EAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,OAAA,EAAA,KAAA,EAAA,IAAA,EAAA,QAAA,EAAA,IAAA,EAAA,OAAA;IAAA,oKAAA;;;EAGA,GAAA,GAA4B,OAAA,CAAQ,KAAR;;EAC5B,GAAA,GAA4B,GAAG,CAAC;;EAChC,KAAA,GAA4B;;EAC5B,GAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,OAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,SAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,KAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,OAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,UAAJ,CAAe,MAAf,EAA4B,KAA5B;;EAC5B,IAAA,GAA4B,GAAG,CAAC,IAAI,CAAC,IAAT,CAAc,GAAd;;EAC5B,OAAA,GAA4B,GAAG,CAAC,OAAO,CAAC,IAAZ,CAAiB,GAAjB;;EAC5B,CAAA,CAAE,EAAF,CAAA,GAA4B,GAA5B;;EACA,QAAA,GAA4B,OAAA,CAAQ,UAAR,EAjB5B;;;EAmBA,KAAA,GAA4B,OAAA,CAAQ,SAAR;;EAC5B,CAAA,CAAE,GAAF,EACE,QADF,EAEE,OAFF,EAGE,OAHF,EAIE,OAJF,CAAA,GAI4B,KAJ5B,EApBA;;;;EA8BA,MAAA,GAAS,QAAA,CAAE,IAAF,CAAA;WAAY,IAAI,CAAC,OAAL,CAAa,qBAAb,EAAoC,MAApC;EAAZ,EA9BT;;;QAkCM,IAAC,CAAA,aAAP,MAAA,WAAA,QAA0B,SAA1B,CAAA;;;;;IAKE,WAAa,CAAE,OAAO,IAAT,CAAA;AACX,UAAA;;;UAmCF,CAAA,oBAAA,CAAA;;UAQA,CAAA,uBAAA,CAAA;;QA1CE,OAAwB;;MACxB,QAAQ,CAAC,eAAT,CAAyB,IAAzB;MACA,IAAC,CAAA,IAAD,GAAwB,KAAK,CAAC,IAAN,CAAW,IAAX,EAHxB;;MAKA,IAAC,CAAA,SAAD,GAAwB,IAAC,CAAA,IAAI,CAAC;MAC9B,IAAC,CAAA,KAAD,GAAwB,CAAE,IAAC,CAAA,SAAD,GAAa,CAAf,CAAA,GAAqB,CAArB,GAAyB;MACjD,IAAC,CAAA,MAAD,GAAwB,IAAC,CAAA,IAAM,CAAA,IAAC,CAAA,SAAD,GAAa,IAAC,CAAA,KAAd,GAAsB,CAAtB;MAC/B,IAAC,CAAA,iBAAD;;AAAsE;QAAA,KAAW,gGAAX;uBAA5C,MAAA,CAAA,CAAA,CAAA,CAAM,MAAA,CAAO,IAAC,CAAA,IAAM,CAAA,GAAA,CAAd,CAAN,CAAA,CAAA,EAA6B,IAA7B;QAA4C,CAAA;;;MACtE,IAAC,CAAA,eAAD;;AAAsE;QAAA,KAAW,gGAAX;uBAA5C,CAAA,CAAA,CAAG,IAAC,CAAA,MAAJ,CAAA,CAAA,CAAa,IAAC,CAAA,IAAM,CAAA,GAAA,GAAM,IAAC,CAAA,KAAP,CAApB,CAAA;QAA4C,CAAA;;;MACtE,IAAC,CAAA,mBAAD;;AAAsE;QAAA,KAAW,gGAAX;uBAA5C,MAAA,CAAA,CAAA,CAAA,CAAM,MAAA,CAAO,IAAC,CAAA,eAAiB,CAAA,GAAA,CAAzB,CAAN,CAAA,CAAA,EAAwC,IAAxC;QAA4C,CAAA;;;MACtE,IAAC,CAAA,OAAD,GAAwB,IAAC,CAAA,IAAM;MAC/B,IAAC,CAAA,cAAD,GAAwB,MAAA,CAAA,CAAA,CAAA,CAAM,MAAA,CAAO,IAAC,CAAA,OAAS,CAAA,CAAA,CAAjB,CAAN,CAA2B,QAA3B,CAAA,CAA2C,MAAA,CAAO,IAAC,CAAA,OAAS,CAAA,CAAA,CAAjB,CAA3C,CAAA,CAAA,EAAmE,IAAnE;MACxB,IAAC,CAAA,OAAD,GAAwB;MACxB,IAAC,CAAA,MAAD,GAAwB;MACxB,IAAC,CAAA,MAAD,GAAwB,CAAA;IAhBb,CAAb;;;IAmBA,IAAM,CAAE,IAAF,CAAA;AACJ,UAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA,CAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,EAAA;MAAA,CAAA,GAAI;MACJ,KAAW,kDAAX;QACE,CAAA,GAAI,CAAC,CAAC,OAAF,CAAU,IAAC,CAAA,iBAAmB,CAAA,GAAA,CAA9B,EAAqC,IAAC,CAAA,eAAiB,CAAA,GAAA,CAAvD;MADN;AAEA;MAAA,KAAA,sCAAA;;QACE,CAAA,GAAI,IAAC,CAAA,aAAD,CAAe,OAAf,EAAwB,CAAxB;MADN;AAEA,aAAO;IANH,CAnBN;;;IA4BA,MAAQ,CAAE,IAAF,CAAA;AACN,UAAA,CAAA,EAAA,CAAA,EAAA,GAAA,EAAA;MAAA,CAAA,GAAI;MACJ,CAAA,GAAI,IAAC,CAAA,gBAAD,CAAkB,CAAlB;MACJ,KAAW,wDAAX;QACE,CAAA,GAAI,CAAC,CAAC,OAAF,CAAU,IAAC,CAAA,mBAAqB,CAAA,GAAA,CAAhC,EAAuC,IAAC,CAAA,IAAM,CAAA,GAAA,CAA9C;MADN;AAEA,aAAO;IALD;;IAQR,aAAe,CAAE,OAAF,EAAW,IAAX,CAAA;AACb,UAAA;;MAAA,CAAA,GAAI;MACJ,CAAA,GAAI,CAAC,CAAC,OAAF,CAAU,OAAV,EAAmB,CAAE,CAAF,EAAK,EAAL,CAAA,GAAA;AACrB,YAAA;QAAA,SAAA,GAAY,IAAC,CAAA,MAAD,CAAQ,EAAR;AACZ,eAAO,CAAA,CAAA,CAAG,IAAC,CAAA,OAAS,CAAA,CAAA,CAAb,CAAA,CAAA,CAAmB,SAAnB,CAAA,CAAA,CAA+B,IAAC,CAAA,OAAS,CAAA,CAAA,CAAzC,CAAA;MAFc,CAAnB;AAGJ,aAAO;IALM;;IAQf,gBAAkB,CAAE,IAAF,CAAA;AAChB,UAAA;;MAAA,CAAA,GAAI;AACJ,aAAM,sCAAN;QACE,CAAA,GAAI,CAAC,CAAC,OAAF,CAAU,IAAC,CAAA,cAAX,EAA2B,CAAE,CAAF,EAAK,EAAL,CAAA,GAAA;iBAAa,IAAC,CAAA,SAAD,CAAW,QAAA,CAAS,EAAT,EAAa,EAAb,CAAX;QAAb,CAA3B;MADN;AAEA,aAAO;IAJS,CA5ClB;;;IAmDA,UAAY,CAAE,OAAF,CAAA;MACV,QAAQ,CAAC,yBAAT,CAAmC,OAAnC;aACA,IAAC,CAAA,OAAO,CAAC,IAAT,CAAc,OAAd;IAFU,CAnDZ;;;;;IA2DA,MAAQ,CAAE,CAAF,CAAA;AACN,UAAA;MAAA,IAAY,4BAAZ;AAAA,eAAO,EAAP;;MACA,CAAA,GAAgB,IAAC,CAAA,MAAM,CAAC;MACxB,IAAC,CAAA,MAAQ,CAAA,CAAA,CAAT,GAAgB;MAChB,IAAC,CAAA,MAAM,CAAC,IAAR,CAAa,CAAb;AACA,aAAO;IALD,CA3DR;;;IAmEA,SAAW,CAAE,GAAF,CAAA;MACT,IAAA,CAAA,CAAO,CAAE,GAAA,IAAO,CAAT,CAAA,IAAiB,CAAE,GAAA,GAAM,IAAC,CAAA,MAAM,CAAC,MAAhB,CAAxB,CAAA;QACE,MAAM,IAAI,KAAJ,CAAU,CAAA,gCAAA,CAAA,CAAmC,GAAA,CAAI,GAAJ,CAAnC,CAAA,CAAV,EADR;;AAEA,aAAO,IAAC,CAAA,MAAQ,CAAA,GAAA;IAHP;;EAxEb,EAlCA;;;;;EAmHA,IAAC,CAAA,OAAD,GACE;IAAA,gBAAA,EAAoB,SAApB;IACA,cAAA,EAAoB,SADpB;IAEA,OAAA,EAAoB;EAFpB;AApHF",
  "sourcesContent": [
    "\n\n\n\"use strict\"\n\n############################################################################################################\nCND                       = require 'cnd'\nrpr                       = CND.rpr\nbadge                     = 'TUNNELTEXT/MAIN'\nlog                       = CND.get_logger 'plain',     badge\ninfo                      = CND.get_logger 'info',      badge\nwhisper                   = CND.get_logger 'whisper',   badge\nalert                     = CND.get_logger 'alert',     badge\ndebug                     = CND.get_logger 'debug',     badge\nwarn                      = CND.get_logger 'warn',      badge\nhelp                      = CND.get_logger 'help',      badge\nurge                      = CND.get_logger 'urge',      badge\necho                      = CND.echo.bind CND\nrainbow                   = CND.rainbow.bind CND\n{ jr, }                   = CND\nMultimix                  = require 'multimix'\n#...........................................................................................................\ntypes                     = require './types'\n{ isa\n  validate\n  declare\n  size_of\n  type_of }               = types\n\n\n\n#-----------------------------------------------------------------------------------------------------------\n### from https://developer.mozilla.org/en-US/docs/Web/JavaScript/Guide/Regular_Expressions ###\nesc_re = ( text ) -> text.replace /[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\"\n\n\n#===========================================================================================================\nclass @Tunneltext extends Multimix\n  # @extend   object_with_class_properties\n  # @include require './cataloguing'\n\n  #---------------------------------------------------------------------------------------------------------\n  constructor: ( chrs = null ) ->\n    super()\n    chrs                 ?= '\\x10\\x11\\x12\\x13\\x14'\n    validate.tunneltext_chrs chrs\n    @chrs                 = Array.from chrs\n    #.......................................................................................................\n    @chr_count            = @chrs.length\n    @delta                = ( @chr_count + 1 ) / 2 - 1\n    @master               = @chrs[ @chr_count - @delta - 1 ]\n    @meta_chr_patterns    = ( /// #{esc_re @chrs[ idx ]} ///gu            for idx in [ 0 .. @delta ] )\n    @target_seq_chrs      = ( \"#{@master}#{@chrs[ idx + @delta ]}\"        for idx in [ 0 .. @delta ] )\n    @target_seq_patterns  = ( /// #{esc_re @target_seq_chrs[ idx ]} ///gu for idx in [ 0 .. @delta ] )\n    @cloaked              = @chrs[ 0 ... @delta ]\n    @reveal_pattern       = /// #{esc_re @cloaked[ 0 ]} ( [ 0-9 ]+ ) #{esc_re @cloaked[ 1 ]} ///gu\n    @tunnels              = []\n    @_cache               = []\n    @_index               = {}\n\n  #---------------------------------------------------------------------------------------------------------\n  hide: ( text ) ->\n    R = text\n    for idx in [ @delta .. 0 ] by -1\n      R = R.replace @meta_chr_patterns[ idx ], @target_seq_chrs[ idx ]\n    for pattern in @tunnels\n      R = @_hide_pattern pattern, R\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  reveal: ( text ) ->\n    R = text\n    R = @_reveal_tunneled R\n    for idx in [ 0 .. @delta ] by +1\n      R = R.replace @target_seq_patterns[ idx ], @chrs[ idx ]\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  _hide_pattern: ( pattern, text ) =>\n    R = text\n    R = R.replace pattern, ( _, $1 ) =>\n      cache_idx = @_store $1\n      return \"#{@cloaked[ 0 ]}#{cache_idx}#{@cloaked[ 1 ]}\"\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  _reveal_tunneled: ( text ) =>\n    R = text\n    while ( R.match @reveal_pattern )?\n      R = R.replace @reveal_pattern, ( _, $1 ) => @_retrieve parseInt $1, 10\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  add_tunnel: ( pattern ) ->\n    validate.tunneltext_tunnel_pattern pattern\n    @tunnels.push pattern\n\n\n  #=========================================================================================================\n  # CACHE\n  #---------------------------------------------------------------------------------------------------------\n  _store: ( x ) ->\n    return R if ( R = @_index[ x ] )?\n    R             = @_cache.length\n    @_index[ x ]  = R\n    @_cache.push x\n    return R\n\n  #---------------------------------------------------------------------------------------------------------\n  _retrieve: ( idx ) ->\n    unless ( idx >= 0 ) and ( idx < @_cache.length )\n      throw new Error \"Âµ44292 index out of bounds, got #{rpr idx}\"\n    return @_cache[ idx ]\n\n\n#===========================================================================================================\n# TUNNELS\n#-----------------------------------------------------------------------------------------------------------\n@tunnels =\n  remove_backslash:   /// \\\\ ( . ) ///gu\n  keep_backslash:     /// ( \\\\ . ) ///gu\n  htmlish:            /// ( < [^>]*? > ) ///gu\n\n\n\n\n\n\n"
  ]
}